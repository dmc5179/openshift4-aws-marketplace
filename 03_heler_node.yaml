AWSTemplateFormatVersion: 2010-09-09
Description: Template for OpenShift Cluster Security Elements (Security Groups & IAM)

Parameters:
  ImageId:
    Description: RHEL AMI ID
    Type: String
    Default: "ami"
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
  InfrastructureName:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: Infrastructure name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
    Description: A short, unique cluster ID used to tag cloud resources and identify items owned or used by the cluster.
    Type: String
    Default: "abc123"
  PullSecretJson:
    Description: OpenShift 4 Pull Secret JSON
    Type: String
    Default: "{}"
  ClusterName:
    AllowedPattern: ^([a-zA-Z][a-zA-Z0-9\-]{0,26})$
    MaxLength: 27
    MinLength: 1
    ConstraintDescription: Cluster name must be alphanumeric, start with a letter, and have a maximum of 27 characters.
    Description: A short, representative cluster name to use for host names and other identifying names.
    Type: String
    Default: "ocpdan"
  HostedZoneName:
    Description: The Route53 zone to register the targets with, such as example.com. Omit the trailing period.
    Type: String
    Default: "danclark.io"


Resources:

  HelperIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: !Join ["-", [!Ref InfrastructureName, "helper", "policy"]]
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action: "ec2:Describe*"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:AttachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action: "ec2:DetachVolume"
            Resource: "*"
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: "*"

  HelperInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - Ref: "HelperIamRole"


  HelperInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref HelperInstanceProfile
      InstanceType: "m5.large"
      KeyName: !Ref KeyName
      NetworkInterfaces:
      - AssociatePublicIpAddress: "false"
        DeviceIndex: "0"
#        GroupSet:
#        - !Ref "BootstrapSecurityGroup"
#        - !Ref "MasterSecurityGroupId"
#        - !Ref "WorkerSecurityGroupId"
#        SubnetId: !Ref "PublicSubnet"
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -xe
            cd /tmp

            curl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.6.5/openshift-client-linux-4.6.5.tar.gz
            curl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.6.5/openshift-install-linux-4.6.5.tar.gz

            tar -xzf openshift-client-linux-4.6.5.tar.gz
            mv oc kubectl /usr/local/bin
            chown root.root /usr/local/bin/oc /usr/local/bin/kubectl
            chmod 0755 /usr/local/bin/oc /usr/local/bin/kubectl
            restorecon -v /usr/local/bin/oc /usr/local/bin/kubectl

            rm -f README.md

            tar -xzf openshift-install-linux-4.6.5.tar.gz
            mv openshift-install /usr/local/bin/
            chown root.root /usr/local/bin/openshift-install
            chmod 0755 /usr/local/bin/openshift-install
            restorecon -v /usr/local/bin/openshift-install
            rm -f README.md

            mkdir cluster
            curl -o "/tmp/cluster/install-config.yaml" https://redhat-dan.s3.amazonaws.com/openshift4-marketplace/config/install-config.yaml

            sed -i "s/BASE_DOMAIN/${base_domain}/g" /tmp/cluster/install-config.yaml
            sed -i "s/CLUSTER_NAME/${cluster_name}/g" /tmp/cluster/install-config.yaml
            sed -i "s/PUBLISH/External/g" /tmp/cluster/install-config.yaml
            sed -i "s/FIPS_ENABLED/false/g" /tmp/cluster/install-config.yaml
            sed -i "s/PULL_SECRET/${pull_secret}/g" /tmp/cluster/install-config.yaml
            #sed -i "s/SSH_PUB_KEY//g" /tmp/cluster/install-config.yaml

            /usr/local/bin/openshift-install create manifests --dir=/tmp/cluster
            sed -i 's/mastersSchedulable: true/mastersSchedulable: false/g' /tmp/cluster/manifests/cluster-scheduler-02-config.yml
            /usr/local/bin/openshift-install create ignition-configs --dir=/tmp/cluster

            # TODO: Upload ignition configs to S3


          - pull_secret: !Ref PullSecretJson
            cluster_name: !Ref ClusterName
            base_domain: !Ref HostedZoneName
            fips_enabled: false
            kms_enabled: false







#at -f sms.sh now + 2 minutes
